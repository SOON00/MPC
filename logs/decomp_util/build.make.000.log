[35m[1mScanning dependencies of target decomp_util[0m
[ 10%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/decomp_basis/data_utils.cpp.o[0m
[ 20%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/decomp_geometry/ellipsoid.cpp.o[0m
[ 30%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/decomp_geometry/geometric_utils.cpp.o[0m
[ 40%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/decomp_geometry/polyhedron.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/decomp_base.cpp.o[0m
[01m[K/workspace/src/decomp_util/src/decomp_geometry/geometric_utils.cpp:[m[K In function â€˜[01m[Kvec_E<std::vector<Eigen::Matrix<double, 3, 1>, Eigen::aligned_allocator<Eigen::Matrix<double, 3, 1> > > > cal_vertices(const Polyhedron3D&)[m[Kâ€™:
[01m[K/workspace/src/decomp_util/src/decomp_geometry/geometric_utils.cpp:213:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kp[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  213 |       Vec3f [01;35m[Kp[m[K = R * Vec3f(it(0), it(1), 0) + t; // convert to world frame
      |             [01;35m[K^[m[K
[ 60%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/ellipsoid_decomp.cpp.o[0m
[ 70%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/iterative_decomp.cpp.o[0m
[ 80%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/line_segment.cpp.o[0m
[ 90%] [32mBuilding CXX object CMakeFiles/decomp_util.dir/src/seed_decomp.cpp.o[0m
[100%] [32m[1mLinking CXX shared library devel/lib/libdecomp_util.so[0m
[100%] Built target decomp_util
